class Restoran:
    def __init__(self):
        self.size = 10  # Ukuran hash table
        self.map = [None] * self.size

    def _getHash(self, key):
        hash_value = 0
        for char in str(key):
            hash_value += ord(char)  # Menghitung nilai ASCII tiap karakter
        return hash_value % self.size

    def _linearProbing(self, key, index):
        return (self._getHash(key) + index) % self.size

    def tambahReservasi(self, key, value):
        key_hash = self._getHash(key)
        key_value = [key, value]

        if self.map[key_hash] is None:
            self.map[key_hash] = key_value
            return True

        # Konflik hash, lakukan linear probing
        for index in range(self.size):
            probeHash = self._linearProbing(key, index)
            if self.map[probeHash] is None or self.map[probeHash] == "deleted":
                self.map[probeHash] = key_value
                return True

        print("Reservasi penuh, tidak dapat menambahkan.")
        return False

    def lihatReservasi(self, key):
        key_hash = self
